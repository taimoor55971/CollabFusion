generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int       @id @default(autoincrement())
  username            String    @unique
  email               String    @unique
  password            String
  adminProjects       Project[] @relation("AdminProjects")
  projectCollaborator Project[] @relation("CollaboratorProjects")
  commits             Commit[]
  userCreatedAt       DateTime  @default(now())
  updatedAt           DateTime  @default(now()) @updatedAt
}

model Project {
  id                 Int      @id @default(autoincrement())
  projectTitle       String   @unique
  projectDescription String
  adminId            Int 
  numCollaborators   Int      @default(1)
  admin              User     @relation("AdminProjects", fields: [adminId], references: [id])
  collaborators      User[]   @relation("CollaboratorProjects")
  tasks              Task[]   // Establish the relationship here
  startingDate       DateTime @default(now())
  updatedAt          DateTime @default(now()) @updatedAt
}

model Task {
  id              Int      @id @default(autoincrement())
  taskTitle       String   @unique
  taskDescription String
  numCommits      Int      @default(0)
  projectId       Int      // Reference to the associated project
  project         Project  @relation(fields: [projectId], references: [id]) // Relationship to the Project model
  commits         Commit[]
  TaskCreatedAt   DateTime @default(now())
  updatedAt       DateTime @default(now()) @updatedAt
}

model Commit {
  id              Int      @id @default(autoincrement())
  taskId          Int
  userId          Int
  message         String
  task            Task     @relation(fields: [taskId], references: [id])
  user            User     @relation(fields: [userId], references: [id])
  CommitCreatedAt DateTime @default(now())
  updatedAt       DateTime @default(now()) @updatedAt
}
